NAME
    BusyBox - The Swiss Army Knife of Embedded Linux

SYNTAX
     busybox <applet> [arguments...]  # or

     <applet> [arguments...]          # if symlinked

DESCRIPTION
    BusyBox combines tiny versions of many common UNIX utilities into a
    single small executable. It provides minimalist replacements for most of
    the utilities you usually find in GNU coreutils, util-linux, etc. The
    utilities in BusyBox generally have fewer options than their
    full-featured GNU cousins; however, the options that are included
    provide the expected functionality and behave very much like their GNU
    counterparts.

    BusyBox has been written with size-optimization and limited resources in
    mind. It is also extremely modular so you can easily include or exclude
    commands (or features) at compile time. This makes it easy to customize
    your embedded systems. To create a working system, just add /dev, /etc,
    and a Linux kernel. BusyBox provides a fairly complete POSIX environment
    for any small or embedded system.

    BusyBox is extremely configurable. This allows you to include only the
    components you need, thereby reducing binary size. Run 'make config' or
    'make menuconfig' to select the functionality that you wish to enable.
    Then run 'make' to compile BusyBox using your configuration.

    After the compile has finished, you should use 'make install' to install
    BusyBox. This will install the 'bin/busybox' binary, in the target
    directory specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when
    configuring BusyBox, or you can specify an alternative location at
    install time (i.e., with a command line like 'make
    CONFIG_PREFIX=/tmp/foo install'). If you enabled any applet installation
    scheme (either as symlinks or hardlinks), these will also be installed
    in the location pointed to by CONFIG_PREFIX.

USAGE
    BusyBox is a multi-call binary. A multi-call binary is an executable
    program that performs the same job as more than one utility program.
    That means there is just a single BusyBox binary, but that single binary
    acts like a large number of utilities. This allows BusyBox to be smaller
    since all the built-in utility programs (we call them applets) can share
    code for many common operations.

    You can also invoke BusyBox by issuing a command as an argument on the
    command line. For example, entering

            /bin/busybox ls

    will also cause BusyBox to behave as 'ls'.

    Of course, adding '/bin/busybox' into every command would be painful. So
    most people will invoke BusyBox using links to the BusyBox binary.

    For example, entering

            ln -s /bin/busybox ls
            ./ls

    will cause BusyBox to behave as 'ls' (if the 'ls' command has been
    compiled into BusyBox). Generally speaking, you should never need to
    make all these links yourself, as the BusyBox build system will do this
    for you when you run the 'make install' command.

    If you invoke BusyBox with no arguments, it will provide you with a list
    of the applets that have been compiled into your BusyBox binary.

COMMON OPTIONS
    Most BusyBox applets support the --help argument to provide a terse
    runtime description of their behavior. If the
    CONFIG_FEATURE_VERBOSE_USAGE option has been enabled, more detailed
    usage information will also be available.

COMMANDS
    Currently available applets include:

            [, [[, arp, arping, ash, awk, cat, chmod, clear, cp, crond, crontab,
            cut, date, dd, df, dhcprelay, dmesg, dnsdomainname, dumpleases,
            echo, egrep, expr, false, fgrep, find, free, ftpget, ftpput, grep,
            gunzip, gzip, halt, head, hexdump, hostname, ifconfig, inetd, init,
            insmod, ip, ipaddr, iplink, iproute, iprule, kill, killall, klogd,
            linuxrc, ln, logger, login, logread, ls, lsmod, microcom, mkdir,
            mknod, modprobe, mount, mv, netstat, nice, nslookup, passwd, ping,
            poweroff, ps, reboot, rm, rmmod, route, run-parts, sed, seq, sh,
            sleep, sort, sysctl, syslogd, tail, tar, test, top, traceroute,
            true, udhcpc, udhcpd, umount, uname, uptime, vconfig, vi, watch,
            wget, which, yes, zcat

COMMAND DESCRIPTIONS
    arp arp [-vn] [-H HWTYPE] [-i IF] -a [HOSTNAME] [-v] [-i IF] -d HOSTNAME
        [pub] [-v] [-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [temp] [-v] [-H
        HWTYPE] [-i IF] -s HOSTNAME HWADDR [netmask MASK] pub [-v] [-H
        HWTYPE] [-i IF] -Ds HOSTNAME IFACE [netmask MASK] pub

        Manipulate ARP cache

        Options:

                -a              Display (all) hosts
                -s              Set new ARP entry
                -d              Delete a specified entry
                -v              Verbose
                -n              Don't resolve names
                -i IF           Network interface
                -D              Read <hwaddr> from given device
                -A, -p AF       Protocol family
                -H HWTYPE       Hardware address type

    arping
        arping [-fqbDUA] [-c CNT] [-w TIMEOUT] [-I IFACE] [-s SRC_IP] DST_IP

        Send ARP requests/replies

        Options:

                -f              Quit on first ARP reply
                -q              Quiet
                -b              Keep broadcasting, don't go unicast
                -D              Duplicated address detection mode
                -U              Unsolicited ARP mode, update your neighbors
                -A              ARP answer mode, update your neighbors
                -c N            Stop after sending N ARP requests
                -w TIMEOUT      Time to wait for ARP reply, seconds
                -I IFACE        Interface to use (default eth0)
                -s SRC_IP       Sender IP address
                DST_IP          Target IP address

    awk awk [OPTIONS] [AWK_PROGRAM] [FILE]...

        Options:

                -v VAR=VAL      Set variable
                -F SEP          Use SEP as field separator
                -f FILE         Read program from FILE

    cat cat [-u] [FILE]...

        Concatenate FILEs and print them to stdout

        Options:

                -u      Use unbuffered i/o (ignored)

    chmod
        chmod [-R] MODE[,MODE]... FILE...

        Each MODE is one or more of the letters ugoa, one of the symbols +-=
        and one or more of the letters rwxst

        Options:

                -R      Recurse

    clear
        clear

        Clear screen

    cp  cp [OPTIONS] SOURCE DEST

        Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY

        Options:

                -a      Same as -dpR
                -R,-r   Recurse
                -d,-P   Preserve symlinks (default if -R)
                -L      Follow all symlinks
                -H      Follow symlinks on command line
                -p      Preserve file attributes if possible
                -f      Force overwrite
                -i      Prompt before overwrite
                -l,-s   Create (sym)links

    crond
        crond -fbS -l N -L LOGFILE -c DIR

                -f      Foreground
                -b      Background (default)
                -S      Log to syslog (default)
                -l      Set log level. 0 is the most verbose, default 8
                -L      Log to file
                -c      Working dir

    crontab
        crontab [-c DIR] [-u USER] [-ler]|[FILE]

                -c      Crontab directory
                -u      User
                -l      List crontab
                -e      Edit crontab
                -r      Delete crontab
                FILE    Replace crontab by FILE ('-': stdin)

    cut cut [OPTIONS] [FILE]...

        Print selected fields from each input FILE to stdout

        Options:

                -b LIST Output only bytes from LIST
                -c LIST Output only characters from LIST
                -d CHAR Use CHAR instead of tab as the field delimiter
                -s      Output only the lines containing delimiter
                -f N    Print only these fields
                -n      Ignored

    date
        date [OPTIONS] [+FMT] [TIME]

        Display time (using +FMT), or set time

        Options:

                [-s,--set] TIME Set time to TIME
                -u,--utc        Work in UTC (don't convert to local time)
                -R,--rfc-2822   Output RFC-2822 compliant date string
                -I[SPEC]        Output ISO-8601 compliant date string
                                SPEC='date' (default) for date only,
                                'hours', 'minutes', or 'seconds' for date and
                                time to the indicated precision
                -r,--reference FILE     Display last modification time of FILE
                -d,--date TIME  Display TIME, not 'now'
                -D FMT          Use FMT for -d TIME conversion

        Recognized TIME formats:

                hh:mm[:ss]
                [YYYY.]MM.DD-hh:mm[:ss]
                YYYY-MM-DD hh:mm[:ss]
                [[[[[YY]YY]MM]DD]hh]mm[.ss]

    dd  dd [if=FILE] [of=FILE] [bs=N] [count=N] [skip=N] [seek=N]

        Copy a file with converting and formatting

        Options:

                if=FILE         Read from FILE instead of stdin
                of=FILE         Write to FILE instead of stdout
                bs=N            Read and write N bytes at a time
                count=N         Copy only N input blocks
                skip=N          Skip N input blocks
                seek=N          Skip N output blocks

        Numbers may be suffixed by c (x1), w (x2), b (x512), kD (x1000), k
        (x1024), MD (x1000000), M (x1048576), GD (x1000000000) or G
        (x1073741824)

    df  df [-Pkmhai] [-B SIZE] [FILESYSTEM]...

        Print filesystem usage statistics

        Options:

                -P      POSIX output format
                -k      1024-byte blocks (default)
                -m      1M-byte blocks
                -h      Human readable (e.g. 1K 243M 2G)
                -a      Show all filesystems
                -i      Inodes
                -B SIZE Blocksize

    dhcprelay
        dhcprelay CLIENT_IFACE[,CLIENT_IFACE2]... SERVER_IFACE [SERVER_IP]

        Relay DHCP requests between clients and server

    dmesg
        dmesg [-c] [-n LEVEL] [-s SIZE]

        Print or control the kernel ring buffer

        Options:

                -c              Clear ring buffer after printing
                -n LEVEL        Set console logging level
                -s SIZE         Buffer size

    dumpleases
        dumpleases [-r|-a] [-f LEASEFILE]

        Display DHCP leases granted by udhcpd

        Options:

                -f,--file=FILE  Leases file to load
                -r,--remaining  Interpret lease times as time remaining
                -a,--absolute   Interpret lease times as expire time

    echo
        echo [-neE] [ARG]...

        Print the specified ARGs to stdout

        Options:

                -n      Suppress trailing newline
                -e      Interpret backslash-escaped characters (i.e., \t=tab)
                -E      Disable interpretation of backslash-escaped characters

    expr
        expr EXPRESSION

        Print the value of EXPRESSION to stdout

        EXPRESSION may be:

                ARG1 | ARG2     ARG1 if it is neither null nor 0, otherwise ARG2
                ARG1 & ARG2     ARG1 if neither argument is null or 0, otherwise 0
                ARG1 < ARG2     1 if ARG1 is less than ARG2, else 0. Similarly:
                ARG1 <= ARG2
                ARG1 = ARG2
                ARG1 != ARG2
                ARG1 >= ARG2
                ARG1 > ARG2
                ARG1 + ARG2     Sum of ARG1 and ARG2. Similarly:
                ARG1 - ARG2
                ARG1 * ARG2
                ARG1 / ARG2
                ARG1 % ARG2
                STRING : REGEXP         Anchored pattern match of REGEXP in STRING
                match STRING REGEXP     Same as STRING : REGEXP
                substr STRING POS LENGTH Substring of STRING, POS counted from 1
                index STRING CHARS      Index in STRING where any CHARS is found, or 0
                length STRING           Length of STRING
                quote TOKEN             Interpret TOKEN as a string, even if
                                        it is a keyword like 'match' or an
                                        operator like '/'
                (EXPRESSION)            Value of EXPRESSION

        Beware that many operators need to be escaped or quoted for shells.
        Comparisons are arithmetic if both ARGs are numbers, else
        lexicographical. Pattern matches return the string matched between
        \( and \) or null; if \( and \) are not used, they return the number
        of characters matched or 0.

    false
        false

        Return an exit code of FALSE (1)

    find
        find [PATH]... [EXPRESSION]

        Search for files. The default PATH is the current directory, default
        EXPRESSION is '-print'

        EXPRESSION may consist of:

                -follow         Follow symlinks
                -mindepth N     Don't act on first N levels
                -name PATTERN   File name (w/o directory name) matches PATTERN
                -iname PATTERN  Case insensitive -name
                -type X         File type is X (X is one of: f,d,l,b,c,...)
                -size N[bck]    File size is N (c:bytes,k:kbytes,b:512 bytes(def.))
                                +/-N: file size is bigger/smaller than N
                -links N        Number of links is greater than (+N), less than (-N),
                                or exactly N
                -print          Print (default and assumed)

    free
        free

        Display the amount of free and used system memory

    ftpget
        ftpget [OPTIONS] HOST [LOCAL_FILE] REMOTE_FILE

        Retrieve a remote file via FTP

        Options:

                -c,--continue   Continue previous transfer
                -v,--verbose    Verbose
                -u,--username   Username
                -p,--password   Password
                -P,--port       Port number

    ftpput
        ftpput [OPTIONS] HOST [REMOTE_FILE] LOCAL_FILE

        Store a local file on a remote machine via FTP

        Options:

                -v,--verbose    Verbose
                -u,--username   Username
                -p,--password   Password
                -P,--port       Port number

    grep
        grep [-HhnlLoqvsriFE] [-m N] [-A/B/C N] PATTERN/-e PATTERN.../-f
        FILE [FILE]...

        Search for PATTERN in FILEs (or stdin)

        Options:

                -H      Add 'filename:' prefix
                -h      Do not add 'filename:' prefix
                -n      Add 'line_no:' prefix
                -l      Show only names of files that match
                -L      Show only names of files that don't match
                -c      Show only count of matching lines
                -o      Show only the matching part of line
                -q      Quiet. Return 0 if PATTERN is found, 1 otherwise
                -v      Select non-matching lines
                -s      Suppress open and read errors
                -r      Recurse
                -i      Ignore case
                -F      PATTERN is a literal (not regexp)
                -E      PATTERN is an extended regexp
                -m N    Match up to N times per file
                -A N    Print N lines of trailing context
                -B N    Print N lines of leading context
                -C N    Same as '-A N -B N'
                -e PTRN Pattern to match
                -f FILE Read pattern from file

    gunzip
        gunzip [OPTIONS] [FILE]...

        Uncompress FILEs (or stdin)

        Options:

                -c      Write to stdout
                -f      Force
                -t      Test file integrity

    gzip
        gzip [OPTIONS] [FILE]...

        Compress FILEs (or stdin)

        Options:

                -c      Write to stdout
                -d      Decompress
                -f      Force

    halt
        halt [-d DELAY] [-n] [-f]

        Halt the system

        Options:

                -d      Delay interval for halting
                -n      No call to sync()
                -f      Force halt (don't go through init)

    head
        head [OPTIONS] [FILE]...

        Print first 10 lines of each FILE (or stdin) to stdout. With more
        than one FILE, precede each with a header giving the file name.

        Options:

                -n N    Print first N lines instead of first 10
                -c N    Output the first N bytes
                -q      Never output headers giving file names
                -v      Always output headers giving file names

    hexdump
        hexdump [-bcCdefnosvx] [FILE]...

        Display FILEs (or stdin) in a user specified format

        Options:

                -b              One-byte octal display
                -c              One-byte character display
                -C              Canonical hex+ASCII, 16 bytes per line
                -d              Two-byte decimal display
                -e FORMAT STRING
                -f FORMAT FILE
                -n LENGTH       Interpret only LENGTH bytes of input
                -o              Two-byte octal display
                -s OFFSET       Skip OFFSET bytes
                -v              Display all input data
                -x              Two-byte hexadecimal display

    hostname
        hostname [OPTIONS] [HOSTNAME | -F FILE]

        Get or set hostname or DNS domain name

        Options:

                -s      Short
                -i      Addresses for the hostname
                -d      DNS domain name
                -f      Fully qualified domain name
                -F FILE Use FILE's content as hostname

    ifconfig
        ifconfig [-a] interface [address]

        Configure a network interface

        Options:

                [[-]broadcast [ADDRESS]] [[-]pointopoint [ADDRESS]]
                [netmask ADDRESS] [dstaddr ADDRESS]
                [hw ether ADDRESS] [metric NN] [mtu NN]
                [[-]trailers] [[-]arp] [[-]allmulti]
                [multicast] [[-]promisc] [txqueuelen NN] [[-]dynamic]
                [mem_start NN] [io_addr NN] [irq NN]
                [up|down] ...

    inetd
        inetd [-fe] [-q N] [-R N] [CONFFILE]

        Listen for network connections and launch programs

        Options:

                -f      Run in foreground
                -e      Log to stderr
                -q N    Socket listen queue (default: 128)
                -R N    Pause services after N connects/min
                        (default: 0 - disabled)

    init
        init

        Init is the parent of all processes

    insmod
        insmod [OPTIONS] MODULE [symbol=value]...

        Load the specified kernel modules into the kernel

        Options:

                -f      Force module to load into the wrong kernel version
                -k      Make module autoclean-able
                -v      Verbose
                -q      Quiet
                -L      Lock to prevent simultaneous loads of a module
                -o NAME Set internal module name to NAME
                -x      Don't export externs

    ip  ip [OPTIONS] {address | route | link | rule} {COMMAND}

        ip [OPTIONS] OBJECT {COMMAND} where OBJECT := {address | route |
        link | rule} OPTIONS := { -f[amily] { inet | inet6 | link } |
        -o[neline] }

    ipaddr
        ipaddr { {add|del} IFADDR dev STRING | {show|flush} [dev STRING] [to
        PREFIX] }

        ipaddr {add|delete} IFADDR dev STRING ipaddr {show|flush} [dev
        STRING] [scope SCOPE-ID] [to PREFIX] [label PATTERN] IFADDR :=
        PREFIX | ADDR peer PREFIX [broadcast ADDR] [anycast ADDR] [label
        STRING] [scope SCOPE-ID] SCOPE-ID := [host | link | global | NUMBER]

    iplink
        iplink { set DEVICE { up | down | arp { on | off } | show [DEVICE] }

        iplink set DEVICE { up | down | arp | multicast { on | off } |
        dynamic { on | off } | mtu MTU } iplink show [DEVICE]

    iproute
        iproute { list | flush | { add | del | change | append | replace |
        monitor } ROUTE }

        iproute { list | flush } SELECTOR iproute get ADDRESS [from ADDRESS
        iif STRING] [oif STRING] [tos TOS] iproute { add | del | change |
        append | replace | monitor } ROUTE SELECTOR := [root PREFIX] [match
        PREFIX] [proto RTPROTO] ROUTE := [TYPE] PREFIX [tos TOS] [proto
        RTPROTO] [metric METRIC]

    iprule
        iprule {[list | add | del] RULE}

        iprule [list | add | del] SELECTOR ACTION SELECTOR := [from PREFIX]
        [to PREFIX] [tos TOS] [fwmark FWMARK] [dev STRING] [pref NUMBER]
        ACTION := [table TABLE_ID] [nat ADDRESS] [prohibit | reject |
        unreachable] [realms [SRCREALM/]DSTREALM] TABLE_ID := [local | main
        | default | NUMBER]

    kill
        kill [-l] [-SIG] PID...

        Send a signal (default: TERM) to given PIDs

        Options:

                -l      List all signal names and numbers

    killall
        killall [-l] [-q] [-SIG] PROCESS_NAME...

        Send a signal (default: TERM) to given processes

        Options:

                -l      List all signal names and numbers
                -q      Don't complain if no processes were killed

    klogd
        klogd [-c N] [-n]

        Kernel logger

        Options:

                -c N    Only messages with level < N are printed to console
                -n      Run in foreground

    ln  ln [OPTIONS] TARGET... LINK|DIR

        Create a link LINK or DIR/TARGET to the specified TARGET(s)

        Options:

                -s      Make symlinks instead of hardlinks
                -f      Remove existing destinations
                -n      Don't dereference symlinks - treat like normal file
                -b      Make a backup of the target (if exists) before link operation
                -S suf  Use suffix instead of ~ when making backup files

    logger
        logger [OPTIONS] [MESSAGE]

        Write MESSAGE (or stdin) to syslog

        Options:

                -s      Log to stderr as well as the system log
                -t TAG  Log using the specified tag (defaults to user name)
                -p PRIO Priority (numeric or facility.level pair)

    login
        login [-p] [-h HOST] [[-f] USER]

        Begin a new session on the system

        Options:

                -f      Don't authenticate (user already authenticated)
                -h      Name of the remote host
                -p      Preserve environment

    logread
        logread [OPTIONS]

        Show messages in syslogd's circular buffer

        Options:

                -f      Output data as log grows

    ls  ls [-1AacCdeFilnpLRrSsTtuvwxXhk] [FILE]...

        List directory contents

        Options:

                -1      List in a single column
                -A      Don't list . and ..
                -a      Don't hide entries starting with .
                -C      List by columns
                -c      With -l: sort by ctime
                --color[={always,never,auto}]   Control coloring
                -d      List directory entries instead of contents
                -e      List full date and time
                -F      Append indicator (one of */=@|) to entries
                -i      List inode numbers
                -l      Long listing format
                -n      List numeric UIDs and GIDs instead of names
                -p      Append indicator (one of /=@|) to entries
                -L      List entries pointed to by symlinks
                -R      Recurse
                -r      Sort in reverse order
                -S      Sort by file size
                -s      List the size of each file, in blocks
                -T N    Assume tabstop every N columns
                -t      With -l: sort by modification time
                -u      With -l: sort by access time
                -v      Sort by version
                -w N    Assume the terminal is N columns wide
                -x      List by lines
                -X      Sort by extension
                -h      List sizes in human readable format (1K 243M 2G)

    lsmod
        lsmod

        List the currently loaded kernel modules

    microcom
        microcom [-d DELAY] [-t TIMEOUT] [-s SPEED] [-X] TTY

        Copy bytes for stdin to TTY and from TTY to stdout

        Options:

                -d      Wait up to DELAY ms for TTY output before sending every
                        next byte to it
                -t      Exit if both stdin and TTY are silent for TIMEOUT ms
                -s      Set serial line to SPEED
                -X      Disable special meaning of NUL and Ctrl-X from stdin

    mkdir
        mkdir [OPTIONS] DIRECTORY...

        Create DIRECTORY

        Options:

                -m      Mode
                -p      No error if exists; make parent directories as needed

    mknod
        mknod [OPTIONS] NAME TYPE MAJOR MINOR

        Create a special file (block, character, or pipe)

        Options:

                -m      Create the special file using the specified mode (default a=rw)
        TYPEs include:

                b:      Make a block device
                c or u: Make a character device
                p:      Make a named pipe (MAJOR and MINOR are ignored)

    modprobe
        modprobe [-knqrsvb] MODULE [symbol=value]...

        Options:

                -k      Make module autoclean-able
                -n      Dry run
                -q      Quiet
                -r      Remove module (stacks) or do autoclean
                -s      Report via syslog instead of stderr
                -v      Verbose
                -b      Apply blacklist to module names too

    mount
        mount [OPTIONS] [-o OPTS] DEVICE NODE

        Mount a filesystem. Filesystem autodetection requires /proc.

        Options:

                -a              Mount all filesystems in fstab
                -r              Read-only mount
                -w              Read-write mount (default)
                -t FSTYPE       Filesystem type
                -O OPT          Mount only filesystems with option OPT (-a only)
        -o OPT:
                loop            Ignored (loop devices are autodetected)
                remount         Remount a mounted filesystem, changing flags
                ro/rw           Same as -r/-w

        There are filesystem-specific -o flags.

    mv  mv [OPTIONS] SOURCE DEST or: mv [OPTIONS] SOURCE... DIRECTORY

        Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY

        Options:

                -f      Don't prompt before overwriting
                -i      Interactive, prompt before overwrite

    netstat
        netstat [-laentuwxrp]

        Display networking information

        Options:

                -l      Display listening server sockets
                -a      Display all sockets (default: connected)
                -e      Display other/more information
                -n      Don't resolve names
                -t      Tcp sockets
                -u      Udp sockets
                -w      Raw sockets
                -x      Unix sockets
                -r      Display routing table
                -p      Display PID/Program name for sockets

    nice
        nice [-n ADJUST] [PROG ARGS]

        Run PROG with modified scheduling priority

        Options:

                -n ADJUST       Adjust priority by ADJUST

    nslookup
        nslookup [HOST] [SERVER]

        Query the nameserver for the IP address of the given HOST optionally
        using a specified DNS server

    passwd
        passwd [OPTIONS] [USER]

        Change USER's password. If no USER is specified, changes the
        password for the current user.

        Options:

                -a      Algorithm to use for password (des, md5)
                -d      Delete password for the account
                -l      Lock (disable) account
                -u      Unlock (re-enable) account

    ping
        ping [OPTIONS] HOST

        Send ICMP ECHO_REQUEST packets to network hosts

        Options:

                -4, -6          Force IP or IPv6 name resolution
                -c CNT          Send only CNT pings
                -s SIZE         Send SIZE data bytes in packets (default:56)
                -I IFACE/IP     Use interface or IP address as source
                -W SEC          Seconds to wait for the first response (default:10)
                                (after all -c CNT packets are sent)
                -w SEC          Seconds until ping exits (default:infinite)
                                (can exit earlier with -c CNT)
                -q              Quiet, only displays output at start
                                and when finished

    poweroff
        poweroff [-d DELAY] [-n] [-f]

        Halt and shut off power

        Options:

                -d      Delay interval for halting
                -n      No call to sync()
                -f      Force power off (don't go through init)

    ps  ps

        Report process status

        Options:

                w       Wide output

    reboot
        reboot [-d DELAY] [-n] [-f]

        Reboot the system

        Options:

                -d      Delay interval for rebooting
                -n      No call to sync()
                -f      Force reboot (don't go through init)

    rm  rm [OPTIONS] FILE...

        Remove (unlink) FILEs

        Options:

                -i      Always prompt before removing
                -f      Never prompt
                -R,-r   Recurse

    rmmod
        rmmod [OPTIONS] [MODULE]...

        Unload the specified kernel modules from the kernel

        Options:

                -w      Wait until the module is no longer used
                -f      Force unloading
                -a      Remove all unused modules (recursively)

    route
        route [{add|del|delete}]

        Edit kernel routing tables

        Options:

                -n      Don't resolve names
                -e      Display other/more information
                -A inet Select address family

    run-parts
        run-parts [-t] [-a ARG] [-u MASK] DIRECTORY

        Run a bunch of scripts in DIRECTORY

        Options:

                -t      Print what would be run, but don't actually run anything
                -a ARG  Pass ARG as argument for every program
                -u MASK Set the umask to MASK before running every program

    sed sed [-efinr] SED_CMD [FILE]...

        Options:

                -e CMD  Add CMD to sed commands to be executed
                -f FILE Add FILE contents to sed commands to be executed
                -i      Edit files in-place (else sends result to stdout)
                -n      Suppress automatic printing of pattern space
                -r      Use extended regex syntax

        If no -e or -f, the first non-option argument is the sed command
        string. Remaining arguments are input files (stdin if none).

    seq seq [-w] [-s SEP] [FIRST [INC]] LAST

        Print numbers from FIRST to LAST, in steps of INC. FIRST, INC
        default to 1.

        Options:

                -w      Pad to last with leading zeros
                -s SEP  String separator

    sleep
        sleep [N]...

        Pause for a time equal to the total of the args given, where each
        arg can have an optional suffix of (s)econds, (m)inutes, (h)ours, or
        (d)ays

    sort
        sort [-nrugMcszbdfimSTokt] [-o FILE] [-k
        start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...

        Sort lines of text

        Options:

                -b      Ignore leading blanks
                -c      Check whether input is sorted
                -d      Dictionary order (blank or alphanumeric only)
                -f      Ignore case
                -g      General numerical sort
                -i      Ignore unprintable characters
                -k      Sort key
                -M      Sort month
                -n      Sort numbers
                -o      Output to file
                -k      Sort by key
                -t CHAR Key separator
                -r      Reverse sort order
                -s      Stable (don't sort ties alphabetically)
                -u      Suppress duplicate lines
                -z      Lines are terminated by NUL, not newline
                -mST    Ignored for GNU compatibility

    sysctl
        sysctl [OPTIONS] [VALUE]...

        Configure kernel parameters at runtime

        Options:

                -n      Don't print key names
                -e      Don't warn about unknown keys
                -w      Change sysctl setting
                -p FILE Load sysctl settings from FILE (default /etc/sysctl.conf)
                -a      Display all values
                -A      Display all values in table form

    syslogd
        syslogd [OPTIONS]

        System logging utility. This version of syslogd ignores
        /etc/syslog.conf

        Options:

                -n              Run in foreground
                -O FILE         Log to given file (default:/var/log/messages)
                -l N            Set local log level
                -S              Smaller logging output
                -s SIZE         Max size (KB) before rotate (default:200KB, 0=off)
                -b N            N rotated logs to keep (default:1, max=99, 0=purge)
                -D              Drop duplicates
                -C[size(KiB)]   Log to shared mem buffer (read it using logread)

    tail
        tail [OPTIONS] [FILE]...

        Print last 10 lines of each FILE (or stdin) to stdout. With more
        than one FILE, precede each with a header giving the file name.

        Options:

                -n N[kbm]       Print last N lines instead of last 10
                -f              Output data as the file grows

    tar tar -[cxtzmvO] [-f TARFILE] [-C DIR] [FILE]...

        Create, extract, or list files from a tar file

        Options:

                c       Create
                x       Extract
                t       List
        Archive format selection:

                z       Filter the archive through gzip
                m       Do not restore mtime
        File selection:

                f       Name of TARFILE or "-" for stdin
                O       Extract to stdout
                C       Change to DIR before operation
                v       Verbose

    test
        test EXPRESSION ]

        Check file types, compare values etc. Return a 0/1 exit code
        depending on logical value of EXPRESSION

    top top [-b] [-nCOUNT] [-dSECONDS]

        Provide a view of process activity in real time. Read the status of
        all processes from /proc each SECONDS and display a screenful of
        them.

    traceroute
        traceroute [-FIldnrv] [-f 1ST_TTL] [-m MAXTTL] [-p PORT] [-q PROBES]
        [-s SRC_IP] [-t TOS] [-w WAIT_SEC] [-g GATEWAY] [-i IFACE] [-z
        PAUSE_MSEC] HOST [BYTES]

        Trace the route to HOST

        Options:

                -F      Set the don't fragment bit
                -I      Use ICMP ECHO instead of UDP datagrams
                -l      Display the TTL value of the returned packet
                -d      Set SO_DEBUG options to socket
                -n      Print numeric addresses
                -r      Bypass routing tables, send directly to HOST
                -v      Verbose
                -m      Max time-to-live (max number of hops)
                -p      Base UDP port number used in probes
                        (default 33434)
                -q      Number of probes per TTL (default 3)
                -s      IP address to use as the source address
                -t      Type-of-service in probe packets (default 0)
                -w      Time in seconds to wait for a response (default 3)
                -g      Loose source route gateway (8 max)

    true
        true

        Return an exit code of TRUE (0)

    udhcpc
        udhcpc [-Cfbnqtvo] [-c CID] [-V VCLS] [-H HOSTNAME] [-i INTERFACE]
        [-p pidfile] [-r IP] [-s script] [-O dhcp-option]... [-P N]

                -V,--vendorclass=CLASSID        Vendor class identifier
                -i,--interface=INTERFACE        Interface to use (default eth0)
                -H,-h,--hostname=HOSTNAME       Client hostname
                -c,--clientid=CLIENTID  Client identifier
                -C,--clientid-none      Suppress default client identifier
                -p,--pidfile=FILE       Create pidfile
                -r,--request=IP         IP address to request
                -s,--script=FILE        Run FILE at DHCP events (default /etc/scripts/default.script)
                -t,--retries=N          Send up to N discover packets
                -T,--timeout=N          Pause between packets (default 3 seconds)
                -A,--tryagain=N         Wait N seconds (default 20) after failure
                -O,--request-option=OPT Request DHCP option OPT (cumulative)
                -o,--no-default-options Don't request any options (unless -O is also given)
                -f,--foreground Run in foreground
                -b,--background Background if lease is not immediately obtained
                -S,--syslog     Log to syslog too
                -n,--now        Exit with failure if lease is not immediately obtained
                -q,--quit       Quit after obtaining lease
                -R,--release    Release IP on quit
                -P,--client-port N  Use port N instead of default 68
                -a,--arping     Use arping to validate offered address

    udhcpd
        udhcpd [-fS] [-P N] [configfile]

        DHCP server

                -f      Run in foreground
                -S      Log to syslog too
                -P N    Use port N instead of default 67

    umount
        umount [OPTIONS] FILESYSTEM|DIRECTORY

        Unmount file systems

        Options:

                -r      Try to remount devices as read-only if mount is busy
                -l      Lazy umount (detach filesystem)
                -f      Force umount (i.e., unreachable NFS server)
                -d      Free loop device if it has been used

    uname
        uname [-amnrspv]

        Print system information

        Options:

                -a      Print all
                -m      The machine (hardware) type
                -n      Hostname
                -r      OS release
                -s      OS name (default)
                -p      Processor type
                -v      OS version

    uptime
        uptime

        Display the time since the last boot

    vconfig
        vconfig COMMAND [OPTIONS]

        Create and remove virtual ethernet devices

        Options:

                add             [interface-name] [vlan_id]
                rem             [vlan-name]
                set_flag        [interface-name] [flag-num] [0 | 1]
                set_egress_map  [vlan-name] [skb_priority] [vlan_qos]
                set_ingress_map [vlan-name] [skb_priority] [vlan_qos]
                set_name_type   [name-type]

    vi  vi [OPTIONS] [FILE]...

        Edit FILE

        Options:

                -c      Initial command to run ($EXINIT also available)
                -R      Read-only
                -H      Short help regarding available features

    watch
        watch [-n SEC] [-t] PROG ARGS

        Run PROG periodically

        Options:

                -n      Loop period in seconds (default 2)
                -t      Don't print header

    wget
        wget [-csq] [-O file] [-Y on/off] [-P DIR] [-U agent] url

        Retrieve files via HTTP or FTP

        Options:

                -s      Spider mode - only check file existence
                -c      Continue retrieval of aborted transfer
                -q      Quiet
                -P      Set directory prefix to DIR
                -O      Save to filename ('-' for stdout)
                -U      Adjust 'User-Agent' field
                -Y      Use proxy ('on' or 'off')

    which
        which [COMMAND]...

        Locate a COMMAND

    yes yes [OPTIONS] [STRING]

        Repeatedly output a line with STRING, or 'y'

    zcat
        zcat FILE

        Uncompress to stdout

LIBC NSS
    GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the
    behavior of the C library for the local environment, and to configure
    how it reads system data, such as passwords and group information. This
    is implemented using an /etc/nsswitch.conf configuration file, and using
    one or more of the /lib/libnss_* libraries. BusyBox tries to avoid using
    any libc calls that make use of NSS. Some applets however, such as login
    and su, will use libc functions that require NSS.

    If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions
    to directly access the /etc/passwd, /etc/group, and /etc/shadow files
    without using NSS. This may allow you to run your system without the
    need for installing any of the NSS configuration files and libraries.

    When used with glibc, the BusyBox 'networking' applets will similarly
    require that you install at least some of the glibc NSS stuff (in
    particular, /etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*,
    and /lib/libresolv*).

    Shameless Plug: As an alternative, one could use a C library such as
    uClibc. In addition to making your system significantly smaller, uClibc
    does not require the use of any NSS support files or libraries.

MAINTAINER
    Denis Vlasenko <vda.linux@googlemail.com>

AUTHORS
    The following people have contributed code to BusyBox whether they know
    it or not. If you have written code included in BusyBox, you should
    probably be listed here so you can obtain your bit of eternal glory. If
    you should be listed here, or the description of what you have done
    needs more detail, or is incorrect, please send in an update.

    Emanuele Aina <emanuele.aina@tiscali.it> run-parts

    Erik Andersen <andersen@codepoet.org>

        Tons of new stuff, major rewrite of most of the
        core apps, tons of new apps as noted in header files.
        Lots of tedious effort writing these boring docs that
        nobody is going to actually read.

    Laurence Anderson <l.d.anderson@warwick.ac.uk>

        rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm

    Jeff Angielski <jeff@theptrgroup.com>

        ftpput, ftpget

    Edward Betts <edward@debian.org>

        expr, hostid, logname, whoami

    John Beppu <beppu@codepoet.org>

        du, nslookup, sort

    Brian Candler <B.Candler@pobox.com>

        tiny-ls(ls)

    Randolph Chung <tausq@debian.org>

        fbset, ping, hostname

    Dave Cinege <dcinege@psychosis.com>

        more(v2), makedevs, dutmp, modularization, auto links file,
        various fixes, Linux Router Project maintenance

    Jordan Crouse <jordan@cosmicpenguin.net>

        ipcalc

    Magnus Damm <damm@opensource.se>

        tftp client insmod powerpc support

    Larry Doolittle <ldoolitt@recycle.lbl.gov>

        pristine source directory compilation, lots of patches and fixes.

    Glenn Engel <glenne@engel.org>

        httpd

    Gennady Feldman <gfeldman@gena01.com>

        Sysklogd (single threaded syslogd, IPC Circular buffer support,
        logread), various fixes.

    Karl M. Hegbloom <karlheg@debian.org>

        cp_mv.c, the test suite, various fixes to utility.c, &c.

    Daniel Jacobowitz <dan@debian.org>

        mktemp.c

    Matt Kraai <kraai@alumni.cmu.edu>

        documentation, bugfixes, test suite

    Stephan Linz <linz@li-pro.net>

        ipcalc, Red Hat equivalence

    John Lombardo <john@deltanet.com>

        tr

    Glenn McGrath <bug1@iinet.net.au>

        Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
        nameif, sed, patch, fold, install, uudecode.
        Various bugfixes, review and apply numerous patches.

    Manuel Novoa III <mjn3@codepoet.org>

        cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
        mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
        get_last_path_component, simplify_path, and a number trivial libbb routines

        also bug fixes, partial rewrites, and size optimizations in
        ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
        mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
        interface, dutmp, ifconfig, route

    Vladimir Oleynik <dzo@simtreas.ru>

        cmdedit; xargs(current), httpd(current);
        ports: ash, crond, fdisk, inetd, stty, traceroute, top;
        locale, various fixes
        and irreconcilable critic of everything not perfect.

    Bruce Perens <bruce@pixar.com>

        Original author of BusyBox in 1995, 1996. Some of his code can
        still be found hiding here and there...

    Tim Riker <Tim@Rikers.org>

        bug fixes, member of fan club

    Kent Robotti <robotti@metconnect.com>

        reset, tons and tons of bug reports and patches.

    Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>

        wget - Contributed by permission of Covad Communications

    Pavel Roskin <proski@gnu.org>

        Lots of bugs fixes and patches.

    Gyepi Sam <gyepi@praxis-sw.com>

        Remote logging feature for syslogd

    Linus Torvalds <torvalds@transmeta.com>

        mkswap, fsck.minix, mkfs.minix

    Mark Whitley <markw@codepoet.org>

        grep, sed, cut, xargs(previous),
        style-guide, new-applet-HOWTO, bug fixes, etc.

    Charles P. Wright <cpwright@villagenet.com>

        gzip, mini-netcat(nc)

    Enrique Zanardi <ezanardi@ull.es>

        tarcat (since removed), loadkmap, various fixes, Debian maintenance

    Tito Ragusa <farmatito@tiscali.it>

        devfsd and size optimizations in strings, openvt and deallocvt.

